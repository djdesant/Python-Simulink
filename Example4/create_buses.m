% -------------------------------------------------------------------
%  Generated by MATLAB on 30-Mar-2020 12:28:46
%  MATLAB version: 9.2.0.538062 (R2017a)
% -------------------------------------------------------------------
% clear all;

componame = 'bus_test';
inputtoken = 'In';
parametertoken = 'Para';
outputtoken = 'Out';
diagnosetoken = 'Diag';
statetoken = 'State';

% %% Load AFI data types
% Simulink.importExternalCTypes('Externals\AFI\afi_typedefs.h',...
%     'Names',{'TRUE','FALSE','uint8_t','uint16_t','uint32_t','uint64_t',...
%              'int8_t','int16_t','int32_t','int64_t',...
%              'bool_t','char8_t','float32_t','float64_t'},'OutputDir','ExternalData','Verbose','on');
%          
% %% Load AFI Timer
% Simulink.importExternalCTypes('Externals\AFI\afi_timer.h',...
%     'Names',{'AFI_TimerCmd_t','AFI_TimerState_t'},'IncludeDirs',{'Externals\AFI'},'OutputDir','ExternalData','Verbose','on');
% 
% %% Load C019 types
% Simulink.importExternalCTypes('Externals\C019_RidgeShaper\Include\C019_RidgeShaperDomain.h','Defines','WIN32',...
%     'IncludeDirs',{'Externals\AFI','Externals\BasPE','Externals\Basic_Includes','Externals\Utilities'},'OutputDir','ExternalData','Verbose','on');
% 
% %% Load BasPE data types
% Simulink.importExternalCTypes('Externals\BasPE\AfiMsgAppCatalog.h','OutputDir','ExternalData','Verbose','on');
% Simulink.importExternalCTypes('Externals\BasPE\BasPe2Def.h','Defines','WIN32',...
%     'IncludeDirs',{'Externals\AFI','Externals\Utilities'},'OutputDir','ExternalData','Verbose','on');


%% Inputs
dummy_t = Simulink.Bus;
dummy_t.Description = '';
dummy_t.DataScope = 'Auto';
dummy_t.HeaderFile = '';
dummy_t.Alignment = -1;

index = 0;

index = index+1;
dummyVar(index, 1) = Simulink.BusElement;
dummyVar(index, 1).Name = 'In1';
dummyVar(index, 1).Complexity = 'real';
dummyVar(index, 1).Dimensions = 1;
dummyVar(index, 1).DataType = 'fixdt(1,32,0.1,0)';
dummyVar(index, 1).Min = [];
dummyVar(index, 1).Max = [];
dummyVar(index, 1).DimensionsMode = 'Fixed';
dummyVar(index, 1).SamplingMode = 'Sample based';
dummyVar(index, 1).SampleTime = -1;
dummyVar(index, 1).DocUnits = '';
dummyVar(index, 1).Description = 'Input 1';

index = index+1;
dummyVar(index, 1) = Simulink.BusElement;
dummyVar(index, 1).Name = 'In2';
dummyVar(index, 1).Complexity = 'real';
dummyVar(index, 1).Dimensions = 1;
dummyVar(index, 1).DataType = 'fixdt(0,16,0.1,0)';
dummyVar(index, 1).Min = [];
dummyVar(index, 1).Max = [];
dummyVar(index, 1).DimensionsMode = 'Fixed';
dummyVar(index, 1).SamplingMode = 'Sample based';
dummyVar(index, 1).SampleTime = -1;
dummyVar(index, 1).DocUnits = '';
dummyVar(index, 1).Description = 'Input 2';

index = index+1;
dummyVar(index, 1) = Simulink.BusElement;
dummyVar(index, 1).Name = 'In3';
dummyVar(index, 1).Complexity = 'real';
dummyVar(index, 1).Dimensions = 1;
dummyVar(index, 1).DataType = 'double';
dummyVar(index, 1).Min = [];
dummyVar(index, 1).Max = [];
dummyVar(index, 1).DimensionsMode = 'Fixed';
dummyVar(index, 1).SamplingMode = 'Sample based';
dummyVar(index, 1).SampleTime = -1;
dummyVar(index, 1).DocUnits = '';
dummyVar(index, 1).Description = 'Input 3';


dummy_t.Elements = dummyVar;

assignin('base',[componame,'_',inputtoken,'_t'],dummy_t);

clear dummy_t dummyVar;

%% Parameter
dummy_t = Simulink.Bus;
dummy_t.Description = '';
dummy_t.DataScope = 'Auto';
dummy_t.HeaderFile = '';
dummy_t.Alignment = -1;

index = 0;

% varname = 'ts';
% dummyname = Simulink.Parameter;
% dummyname.RTWInfo.StorageClass =  'SimulinkGlobal';
% dummyname.Description = 'model sample time';
% dummyname.DataType =  'fixdt(0,32,0.001,0)';
% dummyname.DocUnits = 'sec';
% dummyname.Min = 0.001; dummyname.Max = 1;
% dummyname.Value = 0.02;

index = index+1;
dummyVar(index, 1) = Simulink.BusElement;
dummyVar(index, 1).Name = 'ts';
dummyVar(index, 1).Complexity = 'real';
dummyVar(index, 1).Dimensions = 1;
dummyVar(index, 1).DataType = 'fixdt(0,32,0.001,0)';
dummyVar(index, 1).Min = 0.001;
dummyVar(index, 1).Max = 1.000;
dummyVar(index, 1).DimensionsMode = 'Fixed';
dummyVar(index, 1).SamplingMode = 'Sample based';
dummyVar(index, 1).SampleTime = -1;
dummyVar(index, 1).DocUnits = 'sec';
dummyVar(index, 1).Description = ['Description: Model sample time\n',...
                                  'InitValue: 0.02'];

index = index+1;
dummyVar(index, 1) = Simulink.BusElement;
dummyVar(index, 1).Name = 'Para1';
dummyVar(index, 1).Complexity = 'real';
dummyVar(index, 1).Dimensions = 1;
dummyVar(index, 1).DataType = 'fixdt(0,32,1,0)';
dummyVar(index, 1).Min = [];
dummyVar(index, 1).Max = [];
dummyVar(index, 1).DimensionsMode = 'Fixed';
dummyVar(index, 1).SamplingMode = 'Sample based';
dummyVar(index, 1).SampleTime = -1;
dummyVar(index, 1).DocUnits = '';
dummyVar(index, 1).Description = ['Description: Parameter 1\n',...
                                  'InitValue: 2'];
                              
index = index+1;
dummyVar(index, 1) = Simulink.BusElement;
dummyVar(index, 1).Name = 'Para2';
dummyVar(index, 1).Complexity = 'real';
dummyVar(index, 1).Dimensions = 1;
dummyVar(index, 1).DataType = 'fixdt(0,16,1,0)';
dummyVar(index, 1).Min = [];
dummyVar(index, 1).Max = [];
dummyVar(index, 1).DimensionsMode = 'Fixed';
dummyVar(index, 1).SamplingMode = 'Sample based';
dummyVar(index, 1).SampleTime = -1;
dummyVar(index, 1).DocUnits = '';
dummyVar(index, 1).Description = ['Description: Parameter 2\n',...
                                  'InitValue: 4'];
                              
index = index+1;
dummyVar(index, 1) = Simulink.BusElement;
dummyVar(index, 1).Name = 'TimeDelay';
dummyVar(index, 1).Complexity = 'real';
dummyVar(index, 1).Dimensions = 1;
dummyVar(index, 1).DataType = 'fixdt(0,32,1,0)';
dummyVar(index, 1).Min = 0;
dummyVar(index, 1).Max = 1000;
dummyVar(index, 1).DimensionsMode = 'Fixed';
dummyVar(index, 1).SamplingMode = 'Sample based';
dummyVar(index, 1).SampleTime = -1;
dummyVar(index, 1).DocUnits = '';
dummyVar(index, 1).Description = ['Description: Time Delay\n',...
                                  'InitValue: 0'];
                              
index = index+1;
dummyVar(index, 1) = Simulink.BusElement;
dummyVar(index, 1).Name = 'num';
dummyVar(index, 1).Complexity = 'real';
dummyVar(index, 1).Dimensions = 1;
dummyVar(index, 1).DataType = 'double';
dummyVar(index, 1).Min = [];
dummyVar(index, 1).Max = [];
dummyVar(index, 1).DimensionsMode = 'Fixed';
dummyVar(index, 1).SamplingMode = 'Sample based';
dummyVar(index, 1).SampleTime = -1;
dummyVar(index, 1).DocUnits = '';
dummyVar(index, 1).Description = ['Description: Numerator\n',...
                                  'InitValue: 1'];
                              
index = index+1;
dummyVar(index, 1) = Simulink.BusElement;
dummyVar(index, 1).Name = 'den';
dummyVar(index, 1).Complexity = 'real';
dummyVar(index, 1).Dimensions = 1;
dummyVar(index, 1).DataType = 'double';
dummyVar(index, 1).Min = [];
dummyVar(index, 1).Max = [];
dummyVar(index, 1).DimensionsMode = 'Fixed';
dummyVar(index, 1).SamplingMode = 'Sample based';
dummyVar(index, 1).SampleTime = -1;
dummyVar(index, 1).DocUnits = '';
dummyVar(index, 1).Description = ['Description: Denominator\n',...
                                  'InitValue: 1'];

dummy_t.Elements = dummyVar;

assignin('base',[componame,'_',parametertoken,'_t'],dummy_t);

s = struct;
for index=1:length(dummyVar)
    value = regexp(dummyVar(index, 1).Description,'(?<=\: )[(\[)+-]?\d+[.,]?\d*[(\])]?','match');
    value = str2double(value{1,1});
    if strncmp(dummyVar(index, 1).DataType,'fixdt',5)
        datatype = eval(dummyVar(index, 1).DataType);
        %value = regexp(dummyVar(index, 1).Description,'(?<=\: )[+-]?\d+\.?\d*?','match');
        %value = regexp(dummyVar(index, 1).Description,'(?<=\: )[(\[)+-]?\d+[.,]?\d*[(\])]?','match');
        %value = regexp(dummyVar(index, 1).Description,'(?<=\: )[(\[)+-][^)]*[(\])]?','match');
        %value = regexp(dummyVar(index, 1).Description,'(?<=: )(\[)[^)]*(\])','match');
        %value = str2double(value{1,1});
        s.(dummyVar(index, 1).Name) = fi(...
            value,...
            'DataTypeMode','Fixed-point: slope and bias scaling',...
            'WordLength',datatype.WordLength,...
            'Signedness',datatype.Signedness,...
            'Slope',datatype.Slope,...
            'Bias',datatype.Bias);
    elseif strcmp(dummyVar(index, 1).DataType,'double')
        test = dummyVar(index, 1).Description;
        value = regexp(dummyVar(index, 1).Description,'(?<=\: )[(\[)+-]?\d+[.,]?\d*[(\])]?','match');
        % value = regexp(dummyVar(index, 1).Description,'(?<=: )[+-]?\d+\.?\d*','match');
        % value = regexp(dummyVar(index, 1).Description,'(?<=: )(\[)[^)]*(\])','match');
        value = value{1,1};
        if strcmp(value(1),'[') && strcmp(value(end),']')
            value = regexprep(value, '\[(.*)\]', '$1'); % remove square brackets
            value = str2num(value);
        else
            value = str2double(value);
        end
        s.(dummyVar(index, 1).Name) = double(value);
    end
    
end

para_scope='SimulinkGlobal';
para=Simulink.Parameter;
para.RTWInfo.StorageClass = para_scope;
para.Value=s;
para.DataType=['Bus: ',[componame,'_',parametertoken,'_t']];
para.Description=['Parameter structure for model: ',componame];
assignin('base',[componame,'_',parametertoken],para);

% model argument
if ~bdIsLoaded(componame)
    load_system(componame)
end
modelWorkspace = get_param(componame,'ModelWorkspace');
assignin(modelWorkspace,'p',copy(para));
set_param(componame,'ParameterArgumentNames','p');

% outportNames={'Y','D'};
% for i=1:length(outportNames)
%     outportPath=[componame,'/',outportNames{i}];
%     portHandle=get_param(outportPath,'PortHandles');
%     outportHandle = portHandle.Outport;
%     set_param(outportHandle,'StorageClass','ExportedGlobal');
%     % linehandle = get(outportHandle_interface, 'Line');
%     % srchandle = get(linehandle,'SrcPortHandle');
%     % set_param(srchandle,'Name', [outportName '_out']);
% end


clear dummy_t dummyVar para;

%% Outputs
dummy_t = Simulink.Bus;
dummy_t.Description = '';
dummy_t.DataScope = 'Auto';
dummy_t.HeaderFile = '';
dummy_t.Alignment = -1;

index = 0;

index = index+1;
dummyVar(index, 1) = Simulink.BusElement;
dummyVar(index, 1).Name = 'Out1';
dummyVar(index, 1).Complexity = 'real';
dummyVar(index, 1).Dimensions = 1;
dummyVar(index, 1).DataType = 'fixdt(1,32,0.001,0)';
dummyVar(index, 1).Min = 0;
dummyVar(index, 1).Max = 100.0;
dummyVar(index, 1).DimensionsMode = 'Fixed';
dummyVar(index, 1).SamplingMode = 'Sample based';
dummyVar(index, 1).SampleTime = -1;
dummyVar(index, 1).DocUnits = '%';
dummyVar(index, 1).Description = 'Output 1';

index = index+1;
dummyVar(index, 1) = Simulink.BusElement;
dummyVar(index, 1).Name = 'Out2';
dummyVar(index, 1).Complexity = 'real';
dummyVar(index, 1).Dimensions = 1;
dummyVar(index, 1).DataType = 'fixdt(0,16,0.1,0)';
dummyVar(index, 1).Min = [];
dummyVar(index, 1).Max = [];
dummyVar(index, 1).DimensionsMode = 'Fixed';
dummyVar(index, 1).SamplingMode = 'Sample based';
dummyVar(index, 1).SampleTime = -1;
dummyVar(index, 1).DocUnits = '';
dummyVar(index, 1).Description = 'Output 2';

index = index+1;
dummyVar(index, 1) = Simulink.BusElement;
dummyVar(index, 1).Name = 'Out3';
dummyVar(index, 1).Complexity = 'real';
dummyVar(index, 1).Dimensions = 1;
dummyVar(index, 1).DataType = 'double';
dummyVar(index, 1).Min = [];
dummyVar(index, 1).Max = [];
dummyVar(index, 1).DimensionsMode = 'Fixed';
dummyVar(index, 1).SamplingMode = 'Sample based';
dummyVar(index, 1).SampleTime = -1;
dummyVar(index, 1).DocUnits = '';
dummyVar(index, 1).Description = 'Output 3';

dummy_t.Elements = dummyVar;

assignin('base',[componame,'_',outputtoken,'_t'],dummy_t);

clear dummy_t dummyVar;

%% Diagnose
dummy_t = Simulink.Bus;
dummy_t.Description = '';
dummy_t.DataScope = 'Auto';
dummy_t.HeaderFile = '';
dummy_t.Alignment = -1;

index = 0;

index = index+1;
dummyVar(index, 1) = Simulink.BusElement;
dummyVar(index, 1).Name = 'Diag1';
dummyVar(index, 1).Complexity = 'real';
dummyVar(index, 1).Dimensions = 1;
dummyVar(index, 1).DataType = 'fixdt(1,32,0.001,0)';
dummyVar(index, 1).Min = [];
dummyVar(index, 1).Max = [];
dummyVar(index, 1).DimensionsMode = 'Fixed';
dummyVar(index, 1).SamplingMode = 'Sample based';
dummyVar(index, 1).SampleTime = -1;
dummyVar(index, 1).DocUnits = '';
dummyVar(index, 1).Description = 'Diagnose sygnal 1';

index = index+1;
dummyVar(index, 1) = Simulink.BusElement;
dummyVar(index, 1).Name = 'Diag2';
dummyVar(index, 1).Complexity = 'real';
dummyVar(index, 1).Dimensions = 1;
dummyVar(index, 1).DataType = 'fixdt(0,16,0.1,0)';
dummyVar(index, 1).Min = [];
dummyVar(index, 1).Max = [];
dummyVar(index, 1).DimensionsMode = 'Fixed';
dummyVar(index, 1).SamplingMode = 'Sample based';
dummyVar(index, 1).SampleTime = -1;
dummyVar(index, 1).DocUnits = '';
dummyVar(index, 1).Description = 'Diagnose sygnal 2';

dummy_t.Elements = dummyVar;

assignin('base',[componame,'_',diagnosetoken,'_t'],dummy_t);

clear dummy_t dummyVar;